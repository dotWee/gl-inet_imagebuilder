#!/bin/sh

model=$(awk -F': ' '/machine/ {print tolower($NF)}' /proc/cpuinfo |cut -d- -f2-)

[ -n "$(grep "DK01" /proc/device-tree/model 2>/dev/null)" ] && model="b1300"

led="/dev/null"
wan_eth="eth0"
lan_eth="eth1"

case "$model" in
	"ar150"|\
	"mifi"|\
	"ar300"|\
	"ar300m")
		led="/sys/class/leds/gl-${model}:green:lan/brightness"
		;;
	"mt300a"|\
	"mt300n"|\
	"mt300n-v2")
		led="/sys/class/leds/gl-${model}:green:wan/brightness"
		wan_eth="eth0.2"
		lan_eth="eth0.1"	
		;;
	"usb150")
		led="/sys/class/leds/gl-${model}:green:power/brightness"
		wan_eth="eth1"
		;;
	"ar750")
	    led="/sys/class/leds/gl-$model:white:power/brightness"
	    lan_eth="eth1.1"
	    ;;
	"x750")
		led="/sys/class/leds/gl-$model:white:power/brightness"
		;;
	"x1200" |\
	"ar750s")
		led="/sys/class/leds/gl-$model:white:power/brightness"
		wan_eth="eth0.2"
		lan_eth="eth0.1"	
		;;		
	"b1300")
		led="/sys/class/leds/power_led/brightness"
		;;
	*)
esac

kill -9 $(pgrep -f "button_pressed") &> /dev/null

# Turn led off
if [ "$model" = "ar750" -o "$model" = "x750"  -o "$model" = "ar750s" -o "$model" = "b1300" -o "$model" = "x1200" ]; then
	echo 1 > $led
else
	echo 0 > $led
fi

reset_pressed_duration=$(cat /tmp/reset_pressed_duration)

factory_reset(){
	echo "FACTORY RESET" > /dev/console
	/usr/bin/flashleds &
	jffs2reset -y && reboot &
}

reset_network(){
	echo "Now resetting network" > /dev/console
	if [ "$model" = "usb150" ];then
		uci delete network.wan
	elif [ "$model" = "vixmini" ]; then
		uci set network.wan.ifname='eth0'
		uci set network.wan.proto='dhcp'
		uci delete network.wan.dns
		uci set network.lan.ifname=''
	else
		uci set network.wan.ifname="$wan_eth"
		uci set network.wan.proto='dhcp'
		uci set network.lan.ifname="$lan_eth"
		uci delete network.wan.dns
	fi

	uci set wireless.radio0.disabled='0'
	uci set wireless.radio1.disabled='0'
	uci set wireless.@wifi-iface[0].disabled='0'
	uci set wireless.@wifi-iface[1].disabled='0'

	uci delete network.wwan.peerdns
	uci delete network.wan.peerdns
	uci delete network.lan.macaddr
	uci delete network.wwan.dns
	uci delete network.tethering.dns
	uci delete network.modem.dns
	uci set network.lan.proto='static'
	# uci set network.lan.ipaddr='192.168.8.1'
	uci delete network.stabridge
	uci set dhcp.lan.ignore='0'
	uci set wireless.radio0.disabled='0'
	uci set wireless.wifi-iface[0].disabled='0'
	uci set wireless.sta.disabled='1'
	uci set wireless.sta.wds='0'
	uci set wireless.sta.network='wwan'
	sed -i "s/org_htmode/htmode/g" /etc/config/wireless
	uci set glconfig.bridge.mode='router'
	uci commit
	/etc/init.d/network restart

	cli_enabled=$(uci get glconfig.openvpn.enable)
	[ "$cli_enabled" = "1" ] && {
		sleep 10
		/etc/init.d/startvpn restart
		echo "restart openvpn client" > /dev/console
	}

	srv_enabled=$(uci get vpn_service.global.enable)
	[ "$srv_enabled" = "1" ] && {
		sleep 10
		/etc/init.d/vpn-service restart
		echo "restart openvpn server" > /dev/console
	}
	
	/etc/init.d/dnsmasq enable
	/etc/init.d/dnsmasq restart
	if [ "$model" = "ar750s" -o "$model" = "x1200" ];then 
		swconfig dev switch0 set phy_reset
	elif [ "$model" = "vixmini" ]; then
		swconfig dev switch0 set reset 1
	fi
}

if [ "$reset_pressed_duration" -gt 20 ]; then
	echo 'Reset action cancelled' > /dev/console
	/etc/init.d/led restart
elif [ "$reset_pressed_duration" -gt 8 ]; then
	factory_reset
elif [ "$reset_pressed_duration" -gt 3 ]; then
	reset_network
	/etc/init.d/led restart
fi
