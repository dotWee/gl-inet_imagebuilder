#!/bin/sh

. /lib/functions.sh
. /lib/functions/network.sh

IPT_NAT="iptables -t nat -w"
IPT_FILTER="iptables -t filter -w"

help()
{
	cat <<EOF
Syntax: glfw [command]
Available commands:
	start           Load iptables rules
	stop            Unload iptables rules
	restart         Reload iptables rules
EOF
}

port_forwarding() {
	local outer_port outer_ip inner_port inner_ip proto status outport

	config_get status "$1" status "Enabled"
	[ "$status" = "Enabled" ] || return 0

	config_get outer_port "$1" outer_port
	config_get inner_port "$1" inner_port
	config_get inner_ip "$1" inner_ip
	config_get proto "$1" proto "All"

	[ -z "$outer_port" -o -z "$inner_port" -o -z "$inner_ip" ] && return 0

	network_find_wan wan
	[ -z "$wan" ] && return 0

	network_get_ipaddr outer_ip $wan
	outport=${outer_port/-/:}	 #Use : replace -
	#for p in ${proto}; do
	if [ "$proto" = "UDP" ];then
		$IPT_NAT -I GL_SPEC_FORWARDING -j DNAT -d $outer_ip -p udp --dport $outport --to-destination ${inner_ip}:${inner_port} 1>/dev/null 2>&1
	elif [ "$proto" = "TCP" ];then
		$IPT_NAT -I GL_SPEC_FORWARDING -j DNAT -d $outer_ip -p tcp --dport $outport --to-destination ${inner_ip}:${inner_port} 1>/dev/null 2>&1
	else
		$IPT_NAT -I GL_SPEC_FORWARDING -j DNAT -d $outer_ip -p tcp --dport $outport --to-destination ${inner_ip}:${inner_port} 1>/dev/null 2>&1
		$IPT_NAT -I GL_SPEC_FORWARDING -j DNAT -d $outer_ip -p udp --dport $outport --to-destination ${inner_ip}:${inner_port} 1>/dev/null 2>&1
	fi

#	done
}

port_opening() {
	local proto port

	config_get status "$1" status "Enabled"
	[ "$status" = "Enabled" ] || return 0

	config_get port "$1" port
	config_get proto "$1" proto "all"

	[ -z "$port" ] && return 0

	#for p in ${proto}; do
	if [ "$proto" = "UDP" ];then
		$IPT_FILTER -I GL_SPEC_OPENING -p udp -m udp --dport $port -j ACCEPT 1>/dev/null 2>&1
	elif [ "$proto" = "TCP" ];then
		$IPT_FILTER -I GL_SPEC_OPENING -p tcp -m tcp --dport $port -j ACCEPT 1>/dev/null 2>&1
	else
		$IPT_FILTER -I GL_SPEC_OPENING -p udp -m udp --dport $port -j ACCEPT 1>/dev/null 2>&1
		$IPT_FILTER -I GL_SPEC_OPENING -p tcp -m tcp --dport $port -j ACCEPT 1>/dev/null 2>&1
	fi
	#done
}
get_wan_interface()
{
    WANIFACE=`ip route get 8.8.8.8 | awk '{print $5}'`
    [ -n "$WANIFACE" ] && return 0
    WANIFACE=`uci get network.wan.ifname`
    [ -n "$WANIFACE" ] && return 0
    WANIFACE=`uci get network.wwan.ifname`
    [ -n "$WANIFACE" ] && return 0
    WANIFACE=`uci get network.tethering.ifname`
    [ -n "$WANIFACE" ] && return 0
    WANIFACE=`uci get network.modem.ifname`
    [ -n "$WANIFACE" ] && return 0
    WANIFACE=`uci get network.modem1.ifname`
}

dmz_set() {
	local status dmzip WANIFACE

	config_get status "$1" status "Enabled"
	[ "$status" = "Enabled" ] || return 0

	config_get dmzip "$1" dmzip

	[ -z "$dmzip" ] && return 0
	get_wan_interface

	$IPT_NAT -A GL_SPEC_DMZ -j DNAT -i $WANIFACE --to-destination $dmzip 1>/dev/null 2>&1
}
flush_rules() {
	iptables-save -c | grep -v "GL_SPEC" | iptables-restore -c

	FWI=$(uci get firewall.glfw.path 2>/dev/null)
	[ -n "$FWI" ] && echo '# firewall include file' >$FWI
	return 0
}

export_ipt_rules() {
	[ -n "$FWI" ] || return 0
	cat <<-CAT >>$FWI
	iptables-save -c | grep -v "GL_SPEC" | iptables-restore -c
	iptables-restore -n <<-EOF
	$(iptables-save | grep -E "GL_SPEC|^\*|^COMMIT" |\
		sed -e "s/^-A \(OUTPUT\|PREROUTING\)/-I \1 1/")
	EOF
CAT
	return $?
}

ipt_rules() {
	if ! $IPT_FILTER -S GL_SPEC_OPENING &> /dev/null; then
		$IPT_FILTER -N GL_SPEC_OPENING 1>/dev/null 2>&1
	fi

	if ! $IPT_NAT -S GL_SPEC_FORWARDING &> /dev/null; then
		$IPT_NAT -N GL_SPEC_FORWARDING 1>/dev/null 2>&1
	fi

	if ! $IPT_NAT -S GL_SPEC_DMZ &> /dev/null; then
		$IPT_NAT -N GL_SPEC_DMZ 1>/dev/null 2>&1
	fi

	$IPT_FILTER -I INPUT -j GL_SPEC_OPENING 1>/dev/null 2>&1
	$IPT_NAT -I PREROUTING -j GL_SPEC_FORWARDING 1>/dev/null 2>&1
	$IPT_NAT -I PREROUTING -j GL_SPEC_DMZ 1>/dev/null 2>&1

	config_load glfw

	config_foreach port_forwarding forwarding
	config_foreach port_opening opening
	config_foreach dmz_set dmz
}

export_ipt_rules() {
	[ -n "$FWI" ] || return 0
	cat <<-CAT >>$FWI
	iptables-save -c | grep -v "GL_SPEC" | iptables-restore -c
	iptables-restore -n <<-EOF
	$(iptables-save | grep -E "GL_SPEC|^\*|^COMMIT" |\
		sed -e "s/^-A \(INPUT\|PREROUTING\)/-I \1 1/")
	EOF
CAT
	return $?
}

start() {
	flush_rules && ipt_rules && export_ipt_rules
}

stop() {
	flush_rules
}

restart() {
	stop
	start
}

case "$1" in
	start|stop|restart)
		$*
		;;
	*)
		help
	;;
esac
